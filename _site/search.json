[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "BLOG",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nThis is a dummy blog posts\n\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nInsurgent (Pairwise) Networks\n\n\nConflict makes for strange bedfellows\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n13 min\n\n\n\n\n\n\n  \n\n\n\n\nProxy Wars - Wiki Scrape\n\n\n\n\n\n\n\nscraping\n\n\nR\n\n\ncombat\n\n\n\n\nScrape Wikipedia for proxy war data\n\n\n\n\n\n\nAug 8, 2023\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\nCan I put a subtitle\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 8, 2023\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 5, 2023\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nDummy post in series\n\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\n\nThis is a test post for a series\n\n\n\n\n\n\nJun 2, 2022\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bad ideas executed with vigor",
    "section": "",
    "text": "Welcome to my data science-sandbox. I come here to play and explore data, quantitative methods, and the intersections among society, the arts, and conflict. I’ve always been intrigued by the complex dynamics and passions of society, and this blog is a platform for exploring all that through the lens of data science.\nI’m a former professional dancer turned U.S. Army Reservist turned data scientist. My life has been a nutty blend of “So You Think You Can Dance”, “Band of Brothers” and “Money Ball.”\nLet me be clear: I make no claims that what I’m doing here would pass academic muster. This is more like stumbling into a private studio or workshop. I do my best to be thoughtful and thorough, but you won’t find any peer-reviewed publications here (though let’s be honest, that process has taking some heat in recent years anyway).\nSo poke around. I hope you find something interesting. If you find it useful, steal it. If you have comments or suggestions, I would love to hear them.\nThanks for being here!"
  },
  {
    "objectID": "posts/new/new_post.html",
    "href": "posts/new/new_post.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/new/new_post.html#subheading",
    "href": "posts/new/new_post.html#subheading",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/new/new_post.html#columns",
    "href": "posts/new/new_post.html#columns",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/new/new_post.html#margin-captions",
    "href": "posts/new/new_post.html#margin-captions",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/proxy-wiki-scrape/index.html",
    "href": "posts/proxy-wiki-scrape/index.html",
    "title": "Proxy Wars - Wiki Scrape",
    "section": "",
    "text": "Image source: Virginia Tech Publishing"
  },
  {
    "objectID": "posts/proxy-wiki-scrape/index.html#proxy-wars",
    "href": "posts/proxy-wiki-scrape/index.html#proxy-wars",
    "title": "Proxy Wars - Wiki Scrape",
    "section": "Proxy wars",
    "text": "Proxy wars\nViolence, conflict, and proxy warfare – all on a blissful, dreamy Sunday afternoon. Actually, I was listening to an NPR discussion on an afternoon drive that referenced the work of the Proxy War Project out of Virginia Tech. As a data geek, the next obvious question is: Gee, where can I find data on that?\nWhat does the general public think of regarding proxy warfare? Is it a rag tag group of thugs funded by a dark agency and left to run around the forest? Or maybe proxy wars are a relic of the cold war? To the contrary, according to War on the Rocks (a super cool site on all things war and conflict), “[e]vents of the last decade suggest the increasing salience of such conflicts.” The blog goes on to say that “[p]roxy wars are poised to be a…significant factor in the evolving strategic environment.”\nSo, as soon as I got home, I jumped online for a quick search for some data. The first thing I found was the Wikipedia page. It most certainly is not the most comprehensive data, but it has a nice feature: A helpful Wiki contributor created a typology of proxy wars. I decided to scrape it to started some initial exploration.\nI’m not intending for this to be a deep dive into coding nor proxy war dynamics. This is just a quick and dirty scrape of Wikipedia data to get a sense of what’s going."
  },
  {
    "objectID": "posts/proxy-wiki-scrape/index.html#scraping-and-cleaning-wikipedia-data",
    "href": "posts/proxy-wiki-scrape/index.html#scraping-and-cleaning-wikipedia-data",
    "title": "Proxy Wars - Wiki Scrape",
    "section": "Scraping and Cleaning Wikipedia Data",
    "text": "Scraping and Cleaning Wikipedia Data\n\n\nShow the code\n# libraries\nlibrary(rvest)\nlibrary(tidyverse)\nlibrary(kableExtra)\nsource(\"my_gg_theme.R\")\n\n# Scrape the tables from the page\nproxy_tables <- \n  read_html('https://en.wikipedia.org/wiki/List_of_proxy_wars') %>%\n  html_table(fill = TRUE) %>% \n  # set names based on Wikipedia names\n  set_names(\n    c(\n      'Caveat',\n      'Series', \n      'Pre-World War I proxy wars', \n      'Inter-war period proxy wars',\n      'Cold War proxy wars',\n      'Modern proxy wars',\n      'Ongoing proxy wars'\n    )) \n\n\nThe Wikipedia page displays the following caveat:\n\nThis article or section appears to be slanted towards recent events. Please try to keep recent events in historical perspective and add more content related to non-recent events. (October 2022)\n\nWikipedia spread the data across a number of tables. To prep the data for plotting, I put them into one big data frame and did some minor cleaning. In particular, the dates were a little jenky. The resulting data looks like:\n\n\nShow the code\n# data cleaning\nproxy_data_df <- \n  # drop unneeded data\n  proxy_tables[-c(1,2)] %>% \n  map2_df(\n    names(proxy_tables[-c(1,2)]),\n    ~mutate(.x, war_type = .y)) %>% \n  janitor::clean_names() %>% \n  separate(\n    dates, \n    into = c('start_year', 'end_year'), \n    sep = \"–\") %>%\n  mutate(across(\n    start_year:end_year,\n    ~ str_extract(.x, '[0-9]{4}') %>% \n    as.numeric(.x))) %>% \n  mutate(across(\n    c(war, combatant_1, combatant_1, result),\n    ~ str_remove(., \"\\\\[.*\\\\]$\")))\n\nproxy_data_df %>% \n  slice_head(n = 5) %>% \n  knitr::kable() %>%\n  kable_styling(font_size = 7)\n\n\n\n\n \n  \n    war \n    start_year \n    end_year \n    combatant_1 \n    combatant_2 \n    result \n    war_type \n  \n \n\n  \n    Egyptian–Ottoman War \n    1839 \n    1841 \n    Egypt-aligned powers: Egypt\n France Spain \n    Allied powers: British Empire\n Austrian Empire\n Russian Empire\n Kingdom of Prussia\n Ottoman Empire \n    Compromise \n    Pre-World War I proxy wars \n  \n  \n    Uruguayan Civil War \n    1839 \n    1851 \n    Colorados Unitarian Party Empire of Brazil Italian Legion  France Great Britain \n    Blancos Argentine Confederation \n    Colorado victory \n    Pre-World War I proxy wars \n  \n  \n    Mahdist War \n    1881 \n    1899 \n    British Empire\n Canada\n Khedivate of Egypt Belgium\n\n Congo Free State Ethiopian Empire\n Italy\n\nSupported by: Emirate of Jabal Shammar \n    Mahdist Sudan\nSupported by: Ottoman Empire Russian Empire France \n    British-Egyptian-Italian victory \n    Pre-World War I proxy wars \n  \n  \n    First Samoan Civil War \n    1886 \n    1894 \n    Tamasese German Empire \n    Mata'afans\nSupported by: United States \n    Stalemate \n    Pre-World War I proxy wars \n  \n  \n    Second Samoan Civil War \n    1898 \n    1899 \n    Mata'afans German Empire \n    Samoa United Kingdom  United States \n    Stalemate \n    Pre-World War I proxy wars"
  },
  {
    "objectID": "posts/proxy-wiki-scrape/index.html#plotting-war-duration",
    "href": "posts/proxy-wiki-scrape/index.html#plotting-war-duration",
    "title": "Proxy Wars - Wiki Scrape",
    "section": "Plotting war duration",
    "text": "Plotting war duration\nTo avoid rewriting a bunch of code, let’s create a little function to select the war-type of choice and plot the data. (Note, the plotting code was a little long and distracting, so I pushed some of it to a source script.)\n\n\nShow the code\n# a function to select war type and plot\nwar_plot <- function(df, type) {\n  \n  df %>% \n    filter(\n      war_type == type\n    ) %>% \n    ggplot(aes(\n      x = fct_reorder(war, -start_year),\n      y = start_year)) +\n    geom_segment(aes(\n      xend = war, \n      yend = end_year), \n      color = \"cadetblue\",\n      alpha = 0.75) +\n    # year start\n    geom_point(color = \"orange\", # #E69F00\n               size = 3,\n               alpha = 0.8) +\n    # year end\n    geom_point(aes(\n      y = end_year), \n      color = \"cadetblue\", \n      size = 3,\n      alpha = 0.8) +  \n    \n    coord_flip() +\n    labs(\n      x = \"\", \n      y = \"\",\n      title = type\n      ) +\n    # a sourced function for some trivial formatting \n    quick_gg_theme()\n}\n\n\n\n\nShow the code\nwar_plot(proxy_data_df, \"Pre-World War I proxy wars\")\nwar_plot(proxy_data_df, 'Inter-war period proxy wars')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nwar_plot(proxy_data_df, 'Modern proxy wars')\nwar_plot(proxy_data_df, 'Ongoing proxy wars')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nwar_plot(proxy_data_df, 'Cold War proxy wars')"
  },
  {
    "objectID": "posts/proxy-wiki-scrape/index.html#wrap-up",
    "href": "posts/proxy-wiki-scrape/index.html#wrap-up",
    "title": "Proxy Wars - Wiki Scrape",
    "section": "Wrap up",
    "text": "Wrap up\nFirst, that’s a lot o’ proxy wars. Of course, there’s clearly a few problems with the data. Some dates are missing. And I’m suspicious about the ongoing proxy wars. Are they all really still ongoing?\nThe Cold War was fertile ground for proxy wars. I guess it makes sense, right? Cold wars are characterized by indirect conflict, working through proxies, pawns, and agents of mayhem.\nGiven that proxy wars are frequently a means for “agents” to have deniability regarding the havoc they are wrecking, there is likely a large number of unreported/undiscovered agent-proxy relationships.\nIt might be interesting to parse the text-based columns and see which actors are most frequently leveraging proxies, and in what parts of the world…another day…"
  },
  {
    "objectID": "posts/series1/new_post/post.html",
    "href": "posts/series1/new_post/post.html",
    "title": "Dummy post in series",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/series1/new_post/post.html#merriweather",
    "href": "posts/series1/new_post/post.html#merriweather",
    "title": "Dummy post in series",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "posts/series1/new_post/post.html#columns",
    "href": "posts/series1/new_post/post.html#columns",
    "title": "Dummy post in series",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "posts/series1/new_post/post.html#margin-captions",
    "href": "posts/series1/new_post/post.html#margin-captions",
    "title": "Dummy post in series",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/pairwise_network/network_pairwise.html",
    "href": "posts/pairwise_network/network_pairwise.html",
    "title": "Insurgent (Pairwise) Networks",
    "section": "",
    "text": "During the height of the Syrian civil war, many of us watching from afar were puzzled when “moderate” insurgent groups would jump into bed (or alliances) with hardliners or jihadists. The Syrian conflict had hundreds, maybe thousands, of armed groups forming various kinds of alliances, then divorcing only to reconcile again.\nA lot is made of the role of ideology when armchair commanders (like myself) comment as these disasters play out. On the other hand, alliances could be a pragmatic choice. By aggregating combat power, armed groups might increase their chances of survival—even if only to turn on each other at a later stage.\nIn fact, I recently read a compelling argument on this topic: “Alliance Formation in Civil Wars” by Fotini Christia.1 In this book, Christia states: “It would be natural to suppose that warring groups form alliances based on shared identity considerations—such as Christian groups allying with Christian groups or Muslim groups with their fellow co-religionists—but this is not what we see.”\nSo, with that motivation, I decided to explore what we could find among Syrian armed groups. When coalitions of Syrian armed groups engaged in battles, they frequently partnered with several groups. So, my question was: would groups tolerate fighting alongside other groups that are ideological enemies? So, I’m focusing on pairwise relationships, even when there are many groups in the alliance.\nCode\nlibrary(tidyverse)\nlibrary(ggraph)\nlibrary(tidygraph)\nlibrary(rsvg)\nlibrary(cowplot)\nlibrary(ggtext)\nlibrary(igraph)\nlibrary(devtools)"
  },
  {
    "objectID": "posts/pairwise_network/network_pairwise.html#data",
    "href": "posts/pairwise_network/network_pairwise.html#data",
    "title": "Insurgent (Pairwise) Networks",
    "section": "Data",
    "text": "Data\n\n\n\n\n\n\nA love affair with ACLED data!\n\n\n\nI came across the Armed Conflict Location & Event Data Project(ACLED) a few years ago. What an amazing resource. ACLED is a disaggregated data collection, analysis, and crisis mapping project. The ACLED team collects real time and historical data on political violence and protest events in nearly 100 countries. In short, it’s awesome.2\n\n\nACLED data is robust, with many columns and over many years. In this dataset, actor (along with assoc_actor_1 acts in some (usually bad) way on actor2. So, I’m only concerned with the actor1 and assoc_actor_1 columns. Let’s just take a quick peak:\n\n\nCode\nread_csv(\"df_acled_syr_2017_2021.csv\") |&gt; \n  select(year, event_date, event_type, actor1, assoc_actor_1) |&gt; \n  filter(!is.na(assoc_actor_1)) |&gt;\n  slice_head(n = 5) |&gt; \n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\nyear\nevent_date\nevent_type\nactor1\nassoc_actor_1\n\n\n\n\n2021\n2021-02-05\nBattles\nOperation Peace Spring\nJWS: Syrian National Army; Military Forces of Turkey (2016-)\n\n\n2021\n2021-02-05\nBattles\nOpposition Rebels (Syria)\nMilitary Forces of Turkey (2016-)\n\n\n2021\n2021-02-05\nExplosions/Remote violence\nAl Fath Al Mubeen Operation Room\nOpposition Rebels (Syria)\n\n\n2021\n2021-02-05\nBattles\nMilitary Forces of Syria (2000-)\nMilitia (Pro-Government)\n\n\n2021\n2021-02-04\nExplosions/Remote violence\nOpposition Rebels (Syria)\nMilitary Forces of Turkey (2016-)\n\n\n\n\n\n \nI need select the columns of interest and then filter down to battle related events (filtering out Protests, Riots, and Violence against civilians)\n\n\nCode\ndf_acled_syr &lt;- \n  read_csv(\"df_acled_syr_2017_2021.csv\") |&gt; \n  filter(year %in% 2017:2019,\n         event_type %in% c(\"Explosions/Remote violence\",\n                           \"Battles\",\n                           \"Strategic developments\")) |&gt; \n  select(actor1, assoc_actor_1) |&gt; \n  mutate(actor1 = str_squish(actor1),\n         assoc_actor_1 = str_squish(assoc_actor_1)) \n\n\n \nHere’s the difficult part. The reduced ACLED data looks akin to this:\n\n\nCode\n(test &lt;- tibble::tibble(\n  actor1 = c(\"A\", \"A\", \"B\"),\n  assoc_actor_1 = c(\"B\", \"B; C\", \"C; D; E\"))) |&gt; \n  knitr::kable()\n\n\n\n\n\nactor1\nassoc_actor_1\n\n\n\n\nA\nB\n\n\nA\nB; C\n\n\nB\nC; D; E\n\n\n\n\n\n \nFor what I’m interested in, I need to get the pairwise combinations. So, I need to work out and test the code to accomplish this. A huge thanks to Dusty Turner.3 In fact, this chunk is largely thanks to his generosity.\n\n\nCode\n#| # Separate assoc actors to get all pairwise partnerships'\ndf &lt;- \n  test |&gt; \n  # use only actors with multiple associated actors\n  filter(str_detect(assoc_actor_1, \";\")) |&gt;\n  separate_rows(assoc_actor_1, sep = \";\") |&gt;\n  mutate(assoc_actor_1 = str_squish(assoc_actor_1)) |&gt; \n  pivot_longer(actor1:assoc_actor_1) |&gt; \n  select(value) |&gt; \n  distinct(value) |&gt; \n  mutate(value2 = value) |&gt; \n  expand(value, value2) |&gt; \n  filter(value !=value2) |&gt; \n  mutate(helper = str_c(value,value2)) |&gt; \n  rowwise() |&gt; \n  mutate(helper = str_c(str_sort(unlist(str_split(helper, \"\"))),collapse = \"\")) |&gt; \n  distinct(helper,.keep_all = T) |&gt; \n  select(-helper) |&gt; \n  rename(actor1 = value, assoc_actor_1 = value2)\n\n# bind back with actors that don't have multiple assoc actors\ntest |&gt; \n  filter(!str_detect(assoc_actor_1, \";\")) |&gt;\n  bind_rows(df) |&gt; \n  knitr::kable()\n\n\n\n\n\nactor1\nassoc_actor_1\n\n\n\n\nA\nB\n\n\nA\nB\n\n\nA\nC\n\n\nA\nD\n\n\nA\nE\n\n\nB\nC\n\n\nB\nD\n\n\nB\nE\n\n\nC\nD\n\n\nC\nE\n\n\nD\nE\n\n\n\n\n\n \nThat looks good! Let’s apply it to the ACLED data.\n\n\nCode\n# Separate assoc actors to get all pairwise partnerships'\ndf_separate &lt;- \n  df_acled_syr |&gt; \n  # use only actors with multiple associated actors\n  filter(str_detect(assoc_actor_1, \";\")) |&gt;\n  separate_rows(assoc_actor_1, sep = \";\") |&gt;\n  mutate(assoc_actor_1 = str_squish(assoc_actor_1)) |&gt; \n  pivot_longer(actor1:assoc_actor_1) |&gt; \n  select(value) |&gt; \n  distinct(value) |&gt; \n  mutate(value2 = value) |&gt; \n  expand(value, value2) |&gt; \n  filter(value !=value2) |&gt; \n  mutate(helper = str_c(value,value2)) |&gt; \n  rowwise() |&gt; \n  mutate(helper = str_c(str_sort(unlist(str_split(helper, \"\"))),collapse = \"\")) |&gt; \n  distinct(helper,.keep_all = T) |&gt; \n  select(-helper) |&gt; \n  rename(actor1 = value, assoc_actor_1 = value2)\n\n# bind back with actors that don't have multiple assoc actors\nreshaped_df &lt;- df_acled_syr |&gt; \n  filter(!str_detect(assoc_actor_1, \";\")) |&gt;\n  bind_rows(df_separate)\n\n\n \nOk, I have to confess. This next part stumped me and took forever. First, a huge shout out to Wikipedia contributors. There are soooo many actors in the dataset. I spend much more time than intended trying to consolidate them, constantly referencing Wikipedia to figure out what’s going on.\nSecond, I needed to clean and consolidate the actors, and then remove the non-opposition groups as well as the non-armed-opposition groups. I tried several ways to make happen much more parsimoniously with sapply and purrr::map and a two-column lookup table, but it beat me. If you have suggestions, I’m eager to hear them.\n\n\nCode\n# create a lookup table for groups to remove\nremove_groups &lt;-\n  c(\"Military Forces\", \"Police Forces\", \n    \"Operations Room\", \"Opposition Rebels\", \n    \"Alliance/Named Operation\", \"Tribal\", \n    \"Military Council\", \"Communal Militias\", \n    \"Civilians\", \"SDF\", \"Islamic State\")\n\ndf_acled_actors &lt;- \n  reshaped_df |&gt;\n  mutate(\n    across(\n      actor1:assoc_actor_1,\n      ~ case_when(\n        str_detect(.x, \"Military Forces|Government|Allied Syrian\") ~ \"Military Forces\",\n        str_detect(.x, \"Unidentified Armed|Opposition Rebels|Islamist|Sunni Muslim|JSH\") ~ \"Opposition Rebels\",\n        str_detect(.x, \"Police Forces\") ~ \"Police Forces\",\n        str_detect(.x, \"HXP|QSD|YPG|YPJ|Liberation Army of Afrin|Menbij Internal|Asayish|Syriac\") ~ \"SDF\",\n        str_detect(.x, \"HTS|JFS|Jabhat Fateh al Sham\") ~ \"Hayat Tahrir al Sham\",\n        str_detect(.x, \"Hamza Division|Hamza Brigade\") ~ \"Hamza Division\", \n        str_detect(.x, \"AAS:\") ~ \"Ahrar al Sham\", \n        str_detect(.x, \"Al Sham Corps|Al Sham Division\") ~ \"Faylaq al Sham\",\n        str_detect(.x, \"HNDZ\") ~ \"Nour al Din al Zinki\",\n        str_detect(.x, \"Sharqiya Army\") ~ \"Jaysh Sharqiya\",\n        str_detect(.x, \"Liwa al Aqsa\") ~ \"Jund al Aqsa\",\n        str_detect(.x, \"FaR:\") ~ \"Faylaq al Rahman\",\n        str_detect(.x, \"JaS:\") ~ \"Levant Front\",\n        str_detect(.x, \"Sultan Suleiman Shah\") ~ \"Sultan Suleiman Shah\",\n        str_detect(.x, \"Operations Room\") ~ \"Operations Room\",\n        str_detect(.x, \"Operation Room\") ~ \"Operations Room\",\n        str_detect(.x, \"Wa Harredh al Moa'mineen\") ~ \"Operations Room\",\n        str_detect(.x, \"JWS:|JTW:|JTS:|Euphrates Shield|Peace Spring\") ~ \"Alliance/Named Operation\",\n        str_detect(.x, \"Islamic State\") ~ \"Islamic State\",\n        str_detect(.x, \"Tribal\") ~ \"Tribal\",\n        str_detect(.x, \"Military Council\") ~ \"Military Council\",\n        str_detect(.x, \"TIP:\") ~ \"Turkistan Islamic Party\",\n        str_detect(.x, \"Communal\") ~ \"Communal Militias\",\n        str_detect(.x, \"Kurdish Ethnic\") ~ \"Kurdish Ethnic Militia\",\n        str_detect(.x, \"JaT:\") ~ \"Army of the Revolutionaries\",\n        str_detect(.x, \"Sultan Murad\") ~ \"Sultan Murad\",\n        str_detect(.x, \"Ansar al Din\") ~ \"Ansar al Din\",\n        str_detect(.x, \"JOS:\") ~ \"Lions of the East\",\n        str_detect(.x, \"LAS\") ~ \"Northern Storm Brigade\",\n        str_detect(.x, \"Civilians|Protesters|Rioters|Aid Workers|Women|Farmers|Refugees|Prisoners|Journalists|\") ~ \"Civilians\",\n        TRUE ~ .x\n      ))) |&gt;\n  \n  # remove civilans, state forces or unidentified groups\n  filter(!actor1 %in% remove_groups,\n         !assoc_actor_1 %in% remove_groups,\n         actor1 != assoc_actor_1) |&gt; \n  \n  # Get the top/most groups by number of operations\n  mutate(actor1 = fct_lump(actor1, 10),\n         assoc_actor_1 = fct_lump(assoc_actor_1, 15)) |&gt; \n  filter(actor1 != \"Other\",\n         assoc_actor_1 != \"Other\")\n\n\n \nLet’s check out what the numbers look like for the top 10 most operationally-active groups. How many joint (aka partnered) operations does each group conduct - measured as a percentage of overall joint operations?\n\n\nCode\nlibrary(DT)\ndatatable(df_acled_actors %&gt;% \n  pivot_longer(cols = actor1:assoc_actor_1,\n               names_to = \"cols\",\n               values_to = \"Name\") %&gt;%\n  group_by(Name) %&gt;% \n  summarize(`Partnered Ops` = n()) %&gt;% \n  mutate(Percent = round(`Partnered Ops`/sum(`Partnered Ops`),2),\n         Percent = scales::percent(Percent)) %&gt;% \n  ungroup() %&gt;% \n  arrange(desc(`Partnered Ops`))) \n\n\n\n\n\n\n\n \nClearly, we expect Hayat Tahrir al-Sham to be a prominent player.\nNow to prep the data for graphing…\n\n\nCode\n# create nodes with count of times each actor appears in dataset\ndf_nodes &lt;- \n  df_acled_actors |&gt; \n  pivot_longer(cols = actor1:assoc_actor_1,\n               names_to = \"cols\",\n               values_to = \"Name\") |&gt; \n  group_by(Name) |&gt; \n  summarize(count = n()) |&gt; \n  ungroup() |&gt; \n  #mutate(countG = cut(count, breaks = c(-Inf, 21, 24, 43, Inf))) |&gt; \n  mutate(countG = case_when(\n    count &lt; 21 ~ \"Least\",\n    count &lt; 25 ~ \"Less\",\n    count &lt; 44 ~ \"More\",\n    TRUE ~ \"Most\"\n  ))\n\n# from original df, weight is the count of how often the two actors work together\n# igraph looks for \"from\", \"to\", and \"weight\"\ndf_edges &lt;- \n  df_acled_actors |&gt;\n  count(actor1,assoc_actor_1) |&gt; \n  rename(weight = n,\n         from = actor1,\n         to = assoc_actor_1)\n\ngraph &lt;- \n  graph_from_data_frame(\n  df_edges, \n  vertices = df_nodes)\n\n\nAnd at last, let’s generate a pairwise network plot. Let’s see who partnered with whom.\n\n\nCode\ngraphed &lt;-\n  graph |&gt; \n  ggraph(layout = 'linear', \n         circular = TRUE) +\n  ggraph::geom_edge_arc(\n    aes(alpha = weight),\n    width = 1,\n    show.legend = FALSE,\n    color = \"grey20\"\n  ) +\n  ggraph::geom_node_point(aes(color = countG)) +\n  ggraph::geom_node_label(\n    aes(label = name, \n        color = countG),\n    alpha = .75,\n    label.size = NA,\n    fill = \"#F3F3F3\", \n    size = 3,\n    repel = F,\n    fontface = \"bold\"\n  ) +\n  labs(\n    title = \"Syrian Opposition: Never go it alone!\",\n    subtitle = \"&lt;b&gt;Bolder lines&lt;/b&gt; indicate more &lt;i&gt;joint&lt;/i&gt; combat operations with that partner.\n           &lt;br&gt;Colors indicate frequency of &lt;i&gt;total&lt;/i&gt; combat operations:\n           &lt;br&gt;&lt;b style='color:black'&gt; Most Frequent&lt;/b&gt;,\n           &lt;b style='color:#450D54'&gt; More Frequent&lt;/b&gt;,\n           &lt;b style='color:#557C9B'&gt; Less Frequent&lt;/b&gt;, and \n           &lt;b style='color:#94B147'&gt;Least Frequent&lt;/b&gt;\",\n    caption = \"Data:  &lt;b&gt;'ACLED Event Data 2017-2020'&lt;/b&gt; (acleddata.com)&lt;br&gt; Visualisation by &lt;b&gt;Michael Davies&lt;/b&gt;\"\n  ) +\n  theme_void() +\n  theme(\n    # margins: top, right, bottom, and left\n    plot.margin = margin(0.7, 0.7, 0.7, 0.7, \"cm\"),\n    plot.title = element_text(size = 20, color = \"grey30\", face = \"bold\"),\n    plot.title.position = 'plot',\n    plot.subtitle = element_markdown(lineheight = 1.2),\n    plot.caption = element_markdown(size = 8),\n    plot.caption.position = 'plot',\n    plot.background = element_rect(color = NA, fill = NA),\n    legend.position = \"none\",\n  ) +\n  scale_color_manual(values = c(\"#94B147\", \"#557C9B\", \"#450D54\", \"black\")) +\n  coord_fixed(ratio = 0.6, clip = \"off\")\n\n\nlibrary(magick)\nimg &lt;- \n  image_read(\"jihadi.PNG\") |&gt;\n  image_resize(\"570x380\") |&gt;\n  image_transparent(\"grey\", fuzz = 35)\n\nggdraw() + \n  draw_plot(\n    ggplot() + \n      theme_void() + \n      theme(\n        plot.background = element_rect(color = NA, fill = \"#F3F3F3\") \n      )) +\n  draw_image(interpolate = F, \n             img, \n             scale = .35, \n             x = 0, \n             y = 0) +\n  draw_plot(graphed) \n\n\n\n\n\nAhhh the tangled web they weave. I know I’ve been mixing metaphors.\nI supposed I should have used the colors to signify ideology so that we can see if ideology and parnterships “travel well together.” However, I became interested in how the frequency of operations and partnership might reflect battlefield success. For instance, Hayat Tahrir al-Sham, by all accounts, rose to be the most dominant opposition group. This is reflected in the fact that they conducted the most operations overall. Notably, however, they seldom engaged in an operation on their own. They engaged in the most frequent “joint operations” - despite being consider hardliners, jihadists, and ISIS offshoots.4\nMaybe the key to insurgent survival is - never go it alone."
  },
  {
    "objectID": "posts/pairwise_network/network_pairwise.html#footnotes",
    "href": "posts/pairwise_network/network_pairwise.html#footnotes",
    "title": "Insurgent (Pairwise) Networks",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFotini Christia, “Alliance Formation in Civil Wars”.↩︎\nData from The Armed Conflict Location & Event Data Project (ACLED) was accessed spring of 2021. Given the hieght of the Syrian conflict occured before this time, I chose to re-use this data for this project.↩︎\nMajor Dusty Turner, U.S. Army is a monster coder and overall big brain. I’ve leaned on him for a number of problems. He consistently digs me out of a hole – all while cracking a joke.↩︎\nThe Armed Conflict Location & Event Data Project (ACLED), Actor Profile: Hayat Tahrir al-Sham (HTS) 26 July 2023.↩︎"
  }
]